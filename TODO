(grep for TODOs)
./variety_trials_data/adding_data_views.py:             #TODO: this is the case if a user does not fill out an entire row
./variety_trials_data/variety_trials_util.py:                   locations = models.Location.objects.all() # TODO: only return N locations? is that faster?
./variety_trials_data/variety_trials_util.py:                   number_locations = 8 # TODO: hardcoded constant, should be at least based on web page width
./variety_trials_data/views.py:# TODO: does this belong in the DB?
./variety_trials_data/views.py:         # TODO: what is the behavior of HEAD?
./variety_trials_data/views.py:                 # TODO: Have this view point to / , and if successful redirect them
./variety_trials_data/views.py:                         # TODO: redirect to /view/curyear/field/?... instead
./variety_trials_data/views.py:                         # TODO: repopulate form
./variety_trials_data/views.py:                 # TODO: is python's refcount/garbage collection enough?
./variety_trials_data/views.py:         # TODO: what is the behavior of HEAD?
./variety_trials_data/views.py:                 # TODO: Have this view point to / , and if successful redirect them
./variety_trials_data/views.py:                         # TODO: repopulate form
./variety_trials_data/handle_csv.py:    ## TODO: Ask user if the match is good, and whether or not to use an existing/make a new entry
./variety_trials_data/handle_csv.py:    # TODO: Consider not save() -ing each line, maybe do batches of ~100?
./variety_trials_data/templates/adding_data.html:                       TODO: how do we ``safely'' edit a variety?
./variety_trials_data/templates/adding_data.html:                       TODO: how do we ``safely'' edit a variety?
./variety_trials_data/templates/add_from_csv_template.html:                                     <!--TODO: auto generate this file from the model-->
./variety_trials_data/page/Page.py:             ## TODO: for variety in self.dropped_tables: table.append(Empty_Cell(variety, location))
./variety_trials_data/page/Page.py:             # TODO: recover the tables and combine them into an appendix table
./variety_trials_data/page/LSD_util.py:         # TODO: what is the difference between type I and type III SS? (http://www.statmethods.net/stats/anova.html)
./variety_trials_data/json_views.py:# TODO: add cache.get/set calls to these functions?
./variety_trials_data/json_views.py:    #TODO: filter properly for zipcodes starting with 0, 00
./variety_trials_data/json_views.py:    #TODO: do any zipcodes start with 000? 0000? does zip 00000 exist? 
./variety_trials_data/json_views.py:    # TODO: json_response() wasn't flexible enough, so this is copy+pasted. FIX
./variety_trials_data/json_views.py:    #TODO: the logic here should follow views.zipcode_view


Each variety could have a scroll-over box to information about that particular variety.

Modern browsers support 
<link media="print" rel="stylesheet" src="file.css">

Farmers have expressed interest in seeing information about providers of
seed, phone numbers/websites and prices if possible. This would info
would be available from a hyperlink on the variety name.

We need to dredge up the old data we had and enter the LSD value, back 
to 2010.

* "compare selected" should do nothing if 1 variety is selected
  * maybe they just want to see all the location data for that variety?
		* it may confusing to have them click the variety name-as-link o 
		generate that view

In addition to the "Yield" "Protein Percent" "Test Weight" buttons at
the top of the page, we also need a button "All" that shows all of
those fields. This view would only show the n-yr averages to save space.

button to view source data/access the json views

reimagine in terms of smartphone app
 e.g smaller screens, more drill before view

Think on database synchronization for UMN<=>NDSU. Email admin when something
happens? if unresolved after 10 days, email users?

UI for entering data, confirmation/error pages
Reminder to make the user-entry page robust (iterative), and undoable.

For the iterative upload:
 1) user uploads file
 2) preprocess, no db lookup, publish the parsed file to a webpage
 3) user hits next
 4)	server goes cell by cell, returning the first error to the user
		in the same formatted page as step 2, asks the user what to do
		i.e. accept guess, create new, etc.
 5) repeat 4 until no errors
 6)	show the user the actual entered data (page as step 2, except all
		values pulled from the databse)
 7) a page showing recent changes with the ability to undo recent changes

4 ways to get to variety-variety from home:
 1) mutliple select
 2) n select
 3) select > text field
 4) checkboxes

Variety-Variety selection designs in Mr. Sharma's branch:
* javascript box-to-box: 408feb06df5461d6a6c9398a7bff2cc3be89b33f
* n-checkboxes: c2efd1cf8c4a7eff47447db859ab275a1d0b224e
* 4-dropdowns: 5c88ccfda119faa8eba1b781a6fdf391990c54d3
* The original is in master:
* multiple-select: adcc766712e777872b04d8620cb3ba82c53aee6f

Philosphize: AJAX or fully load? LSDs can't be calculated w/o all of the
data, although we could start to populate the table.. but the subtables will 
morph while loading... desirable? it does show some sort of loading screen...

On mobile views:
* http://dev.opera.com/articles/view/love-your-devices-adaptive-web-design-with-media-queries-viewport-and-more/
* http://dev.opera.com/articles/view/an-introduction-to-meta-viewport-and-viewport/
* http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/
* http://dev.opera.com/articles/view/the-mobile-web-optimization-guide/
* mobile + accessibility: http://www.w3.org/TR/mwbp-wcag/
* mobile best practices:* http://www.w3.org/TR/mwabp/

On page loading speed:
* application-cache (AppCache):* http://www.w3.org/TR/html5/offline.html#appcache
* css-sprites: http://wellstyled.com/css-nopreload-rollovers.html

Javascript's introspection of passed arguments:
* http://javascriptweblog.wordpress.com/2011/01/18/javascripts-arguments-object-and-beyond/

Caching has been implemented as tempory-files, some thought should be
given to memcached (a security risk?). Community hivemind says db-based
is only appreciably faster in edge cases, i.e. dedicated database machine

In-page spreadsheet requirements
* Able to paste data from Excel/Open/LibreOffice
* Ability to lock 1st row/ name column headers
* Reliance on Javascript acceptable
* Ability to render in all browsers not necessary

Google:
	http://stackoverflow.com/questions/4143901/access-google-spreadsheet-or-google-data-api-only-with-javascript
	https://developers.google.com/google-apps/documents-list/#creating_a_new_document_or_file_with_metadata_only
	https://developers.google.com/google-apps/documents-list/#deleting_documents_and_files
	Will need to hide/diable the headers. 
	Can we use google's spreadsheet editor? Only in a new window/iframe...

Non-google:
	http://roberto.open-lab.com/2010/01/30/javascript-grid-editor-i-want-to-be-excel/
	https://github.com/mleibman/SlickGrid
	http://mleibman.github.com/SlickGrid/examples/example3-editing.html

Secretary view needs
* Testing for multiple lines entry
* Summary of about-to-commit data at end of "are you sure" pipeline?

Notes from July 27 meeting
* Allow variety descriptions (the varieties table) to be updated
** What about protection from deletion/malicious overwrite?
* Update the main page to check for javascript, do an instant-search 
	type query when the zipcode is entered (i.e. dynamic keeps the zipcode 
	form on the main page)
* Fill in zipcode as typed, with name data
* Ensure newly entered varieties can show up in search

Notes from Aug 10 Meeting
* Roll up advanced search page, user manual desribing GET structure
* vareity descriptors
** externel URL(s) for now
** later use to enhance v-to-v view
* Rollout Sep 1
* JSONP for other sites to grab from DB

put /add/ in robots.txt

* Anything special so google can find us?
** We need a list of keywords
*** North Dakota
*** Minnesota
*** Wheat Trials
*** Variety Varietal selection
*** NDSU MSU
*** Extension Info Type Breed Description ...

Notes from Aug 24 meeting with Dr. Wiersma
* v-v wonky with caching

* was able to crash-the-cache by selecting '2010' after the 5mins

Investigate an appropriate time to call page.clear(), if ever -or- set
up garbage-collection __name__() functions, if exists?

Source for zipcode-autocomplete
	http://tomcoote.co.uk/wp-content/CodeBank/Demos/JSONSuggestBox/demo.html

need to use the urlencode filter when making /view/variety/name/ links

2013 Jan 11 Meeting:
* Self
** Advanced search
*** More advanced queries can be dreamt up? More powerful interaction with the URL generator?
*** CSV download of results?
** More flexible data entry - consider other crops, i.e. alfalpha is not measured in bushels_acre.

* Email updates _every_ Friday

* variety infos (put links in database):
** http://www.maes.umn.edu/12VarietalTrials/redspringwheat.pdf
** http://www.maes.umn.edu/vartrials/swht/index.asp
** http://www.ag.ndsu.edu/pubs/plantsci/smgrains/a574.pdf
** http://ndsuresearchfoundation.org/images/pdf/Wheat%20-%20Faller%20brochure.pdf
** http://ndsuresearchfoundation.org/search.aspx?s=wheat
** https://www.crops.org/publications/jpr/abstracts/2/3/224
** https://www.crops.org/publications/jpr/abstracts/5/1/62
** http://www.ars-grin.gov/cgi-bin/npgs/acc/display.pl?1729191
** http://www.ars-grin.gov/cgi-bin/npgs/acc/display.pl?1813821

* link /view/available/ to the contribute(?) section

* Include upper tables in each following table.
** Highlight new entries?

print R version, agricolae version in footer of each page. May as well print django/python as well.

Can we rewrite _get_entries() to itereate through years and directly fetch the self.cells? will need to profile both approaches
Must find a way to bacth the calls to the R subprocess, or at least async them (time for ajax?)

55108 2012 NEAR shows (8, 0, 0) for first table, but 2011 shows (8, 7, 5)...!? 
	It's beacuse of LeCenter... how are the means still calculating for 2-yr?

Explain caveats of setting variety= on advanced_search.html (does not_locations still work?, etc.)

Filter out "id" from list of fields on advanced_search.html

UI:
* should their be a list of "locations hidden", with links to unhide them? yes?
* button to "load more locations"
* message saying which planting methods are shown on the page

head-to-head problems: 
	after doing lots&lots of queries, I conclude we have extra data in 2012 for
	only Williston and Carrington.
	Performed:
	query = models.Trial_Entry.objects.filter(harvest_date__in=this_year_dates).filter(hidden=False).filter(location=wil).filter(planting_method_tags="no till")
	>>> query.count()
	32
	>>> for e in query:
	...  e.hidden = True
	...  e.save()
	>>> query = models.Trial_Entry.objects.filter(harvest_date__in=this_year_dates).filter(hidden=False).filter(location=car).exclude(planting_method_tags=None)
	>>> query.count()
	107
	>>> for e in query:
	...  e.hidden = True
	...  e.save()

This is now approaching a problem point; We just threw away 107+32 pieces of 
data because we have no way of showing no-till vs fallow trials, etc. fix!

Planting method tags normalizing:
for e in  models.Trial_Entry.objects.filter(planting_method_tags=u''):
 e.planting_method_tags=None
 e.save()
e = models.Trial_Entry.objects.filter(planting_method_tags=u'no till recrop')[0]
e.planting_method_tags = u'no till, recrop'
e.save()
for e in models.Trial_Entry.objects.filter(planting_method_tags=u'foliar fungicide, variety response, main factors'):
 e.planting_method_tags = u'fungicide'
 e.save()
for e in  models.Trial_Entry.objects.filter(planting_method_tags=u'direct seeded'):
 e.planting_method_tags = u'direct'
 e.save()
for e in  models.Trial_Entry.objects.filter(planting_method_tags=u'direct seeded, dryland, recrop, elite'):
 e.planting_method_tags = u'direct, dryland, recrop, elite'
 e.save()

Planting method tags in the database:
	fallow
		[1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637]
	no till, recrop
		[57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 725, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741]
	direct, dryland, recrop, elite
		[154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180]
	irrigated
		[214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3290, 3291, 3292, 3519, 3520, 3521, 3522, 3523, 3524, 3525, 3526]
	organic
		[226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 3527, 3528, 3529, 3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539, 3540, 3541, 3542, 3543, 3544, 3545, 3546, 3547, 3548]
	dryland
		[241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 3293, 3294, 3295, 3296, 3297, 3298, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3315, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3323, 3324, 3325, 3326, 3327, 3328, 3329, 3330, 3331, 3332, 3333, 3334, 3335]
	direct
		[281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 3336, 3337, 3338, 3339, 3340, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3365, 3366]
	fungicide
		[310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 3695, 3696, 3697, 3698, 3699, 3700, 3701, 3702, 3703, 3704, 3705, 3706, 3707, 3708, 3709, 3710, 3711, 3712, 3713, 3714, 3735, 3736, 3737, 3738, 3739, 3740, 3741, 3742, 3743, 3744, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754]
	no till, durum stubble
		[320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335]
	no till
		[474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3452, 3453, 3454, 3455, 3456, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487, 3488, 3489, 3490, 3491]
	recrop
		[780, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3655, 3656, 3657, 3658, 3659, 3660, 3661, 3662, 3663, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3671, 3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679, 3680, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3688, 3689, 3690, 3691, 3692, 3693, 3694]
	tilled soybean cover
		[1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939]
	direct, fungicide
		 [2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138]
	intensive
		[3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147]
	direct, recrop, elite
		[3492]

Planting method tags UI:
* user indicates preference on main page, defaults to none
** or do we want to have them indicate exclusion? i.e. how do we handle 
	the untagged trials... We won't have enough data if we only search 
	for dryland near fargo, we'll need dryland + untagged. It'd be easier
	to show all, and let the user let us know before hand to exclude
	all irrigated results.
*** this could easier be accomplished on the results page, a kind of
	of meta-exlcude locations
* tags are displayed alongside location name.

May have found problem with caching; not_locations isn't included in the cache_key

On many pages, no LSD results appear, and _sometimes_ a refresh causes them to appear/disappear...
This has been solved: 
* doc/2013Jun05.livetrace.html
* http://stackoverflow.com/questions/8494335/running-subprocess-popen-under-apachemod-wsgi-is-always-returning-an-error-with
* this bug: http://bugs.python.org/issue13156 was solved after 2.7.3rc1:
** 2.7.2: http://hg.python.org/cpython/rev/8527427914a2
** solved: http://hg.python.org/cpython/rev/aa6ce09d2350/
** 2.7.3rc1: http://hg.python.org/cpython/rev/b2c6aff96e12
* furthermore, www.ag.ndsu.edu is running Ubuntu 11.10, which is deprecated and has no package for 2.7.3
* solutions: 
** rewrite _R_subprocess() to use pipes/etc. and test on a 11.10 server (can we find an old server!?)
** setup a HTTP 30x redirect to another box
* this problem persists... maybe calculating the LSDs before returning the (partial) response... this will help with the following problem:

A new problem: I'm now seeing lsd when 3-yr is all none, it's just a copy of the 2-yr...
This actually wasn't a bug:
* R was being sent the n-yr data in all cases
* sometimes R would decide that the LSD is calculable, even though I neglected to print the mean.
We need to show the means if R thinks its good:
* means need to be calculated, and only hidden if R returns nothing.
** anaylsis: are there instances where the input to mean() would differ from what R sees?
*** imagine an empty year, R would see items from the previous year and still spit out an LSD
* will want to keep this behavior on a boolean, say "conservative_means_reporting=False"
