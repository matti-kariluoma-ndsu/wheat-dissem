(grep for TODOs)
./urls.py:    ## TODO: There are 3 views of our data, reduce to 2 if not 1.

./settings.py:## TODO: Disable the sessions, auth, admin, etc. apps we don't need

./variety_trials_data/variety_trials_forms.py:	## TODO: Ask user if the match is good, and whether or not to use an existing/make a new entry
./variety_trials_data/variety_trials_forms.py:	# TODO: Consider not save() -ing each line, maybe do batches of ~100?

./variety_trials_data/templates/main.html:	TODO: Add noscript version of this field to point to the noscript
./variety_trials_data/templates/main.html:	TODO: fix input validation strings return an error.
./variety_trials_data/templates/main.html:	TODO: Do we need csrf_token?
./variety_trials_data/templates/main.html:	TODO: use get, not post

./variety_trials_data/templates/tabbed_view.html:<div class="location_form years"><!-- style="padding: 5px;" TODO: Apply on NoScript?-->
./variety_trials_data/templates/tabbed_view.html:<div class="variety_form years"><!-- style="padding: 5px;" TODO: Apply on NoScript?-->
./variety_trials_data/templates/tabbed_view.html:<td><!-- style="padding: 5px;" TODO: Apply on NoScript?-->
./variety_trials_data/templates/tabbed_view.html:<td><!-- style="padding: 5px;" TODO: Apply on NoScript?-->
./variety_trials_data/templates/tabbed_view.html:	<div ><!-- style="padding: 5px;" TODO: Apply on NoScript?-->
./variety_trials_data/templates/tabbed_view.html:		<!--TODO: auto-generate these year button images-->
./variety_trials_data/templates/tabbed_view.html:				<td colspan="{{ heading_list|length|add:1 }}" class="current_year">{{curyear}}</td> <!--TODO: Hardcoded value `2' isn't always correct-->
./variety_trials_data/templates/tabbed_view.html:				<td colspan="{{ heading_list|length|add:1 }}" class="current_year"></td> <!--TODO: Hardcoded value `2' isn't always correct-->

./variety_trials_data/templates/add_from_csv_template.html:	<!--TODO: auto generate this file from the model-->

./variety_trials_data/views.py:	#TODO: Somehow reduce this to depth=1
./variety_trials_data/views.py:			#TODO: there must be a better way to populate the varieties list
./variety_trials_data/views.py:	# TODO: does this belong in the DB?
./variety_trials_data/views.py:							"SELECT id FROM variety_trials_data_trial_entry WHERE %s!='' LIMIT 6", #TODO: hardcoded numeric value
./variety_trials_data/views.py:					if count > 5:  #TODO: hardcoded numeric value
./variety_trials_data/views.py:	# TODO: respect/update the cur_year value.
./variety_trials_data/views.py:		# TODO: we can do more for the user than redirect to /
./variety_trials_data/views.py:	#TODO: this is very bad for the database...

./variety_trials_data/variety_trials_util.py:	# TODO: pull out into common-function call to make this boolean's use
./variety_trials_data/variety_trials_util.py:				raise BaseException # TODO: raise a standard/helpful error
./variety_trials_data/variety_trials_util.py:				raise BaseException #TODO: raise a standard/helpful error
./variety_trials_data/variety_trials_util.py:		# TODO: what is the difference between type I and type III SS? (http://www.statmethods.net/stats/anova.html)
./variety_trials_data/variety_trials_util.py:			count = [0,0,0] # TODO: _Heavily_ assumes we are only using the last three years
./variety_trials_data/variety_trials_util.py:						else: # TODO: We should never need to take this else branch
./variety_trials_data/variety_trials_util.py:		for num_times in range(3): # TODO: hard-coded numeric value
./variety_trials_data/variety_trials_util.py:		#TODO: mayhap this check should be done before break_into_subsets()?
./variety_trials_data/variety_trials_util.py:			self.groups_loc[((order,order,order),0)] = [list(common_locations), list(common_locations), list(common_locations)]# TODO: heavily assumes 3-yrs
./variety_trials_data/variety_trials_util.py:			for l in sorted(self.groups_loc.values()[0][0], key=attrgetter('name')): ##TODO: Super-kludge
./variety_trials_data/variety_trials_util.py:				#locations = [l_indexes[l] for l in self.groups_loc[key][cy_i]] # TODO: do we need to consider the other years here?
./variety_trials_data/variety_trials_util.py:				# TODO: kludge, adds unececssary locales, much extra processing. should changfe 'locations' for each year when doing multyear
./variety_trials_data/variety_trials_util.py:							value = round(value, 1) # TODO: is round necessary here?
./variety_trials_data/variety_trials_util.py:				for v in sorted(self.groups[key], key=attrgetter('name')): #TODO: we iterated through this already...
./variety_trials_data/variety_trials_util.py:				for l in sorted(self.groups_loc.values()[0][0], key=attrgetter('name')): ##TODO: Super-kludge	
./variety_trials_data/variety_trials_util.py:						value = self.lsds[l][cy_i] #TODO: smarter logic needed
./variety_trials_data/variety_trials_util.py:						value = self.lsds[l][cy_i] #TODO: smarter logic needed
./variety_trials_data/variety_trials_util.py:	# TODO: pull out into common-function call to make this boolean's use
./variety_trials_data/variety_trials_util.py:		self.varieties = [] # reset the variable, otherwise we see the last added to our new ones (TODO: might be a useful feature)
./variety_trials_data/variety_trials_util.py:				raise BaseException # TODO: raise a standard/helpful error
./variety_trials_data/variety_trials_util.py:				raise BaseException #TODO: raise a standard/helpful error
./variety_trials_data/variety_trials_util.py:		# TODO: what is the difference between type I and type III SS? (http://www.statmethods.net/stats/anova.html)
./variety_trials_data/variety_trials_util.py:		for num_times in range(3): # TODO: hard-coded numeric value
./variety_trials_data/variety_trials_util.py:				location_id = models.Location.objects.get(name__iexact=l).id # TODO bad,bad,bad no-no-no we shouldn't need to hit the db like this
./variety_trials_data/variety_trials_util.py:						variety_id = models.Variety.objects.get(name__iexact=v).id # TODO bad,bad,bad no-no-no we shouldn't need to hit the db like this
./variety_trials_data/variety_trials_util.py:								value = round(sum(values)/len(values), 1) # TODO: is round necessary here?
./variety_trials_data/variety_trials_util.py:					for v in sorted(self.groups[key]): #TODO: we iterated through this already...
./variety_trials_data/variety_trials_util.py:							temp_row.append(max(self.lsds[(l, self.year)])) #TODO: smarter logic needed
./variety_trials_data/variety_trials_util.py:			# TODO: Search the max distance, then have the user decide what threshold to filter at after _all_ results returned.
./variety_trials_data/variety_trials_util.py:			# TODO: have the Location objects grab default lat/long, not user entered
./variety_trials_data/variety_trials_util.py:			#TODO: We just searched a square, now discard searches that are > x miles away.

"tabbed_view" is set up using a hierarchy of tables. It would be nicer 
if instead "tabbed_view" used <div> tags with a good class structure
to keep the data aligned. Furthermore, it may be possible to represent
the cells as objects and reduce the need for the server to explicitly
make the table structure.

The links on "tabbed_view" aren't really hyperlinks to other pages, they
use javascript to reload the page with new parameters. This won't work 
if javascript is disabled. Also, would an image hyperlink, or some other
method, be more clear then a text hyperlink?

The main page has a form that points to "view/column_name/year", but
if that page is visited directly (or bookmarked) the data does not 
display. We need to support a GET version of the page (or just use GET
only) in addition to our already implemented POST version using the 
aforementioned form.

When viewing the query on "tabbed_view", the data is separated into
many sub-tables. We need to show the amount of underlying data that went
into the reported 1-yr, 2-yr, and 3-yr means, as well as into the LSD
calculation. (In the code, this is the three-tuple (x,y,z) key to the
self.groups dictionary.)

When viewing the data, we print the variety and locations names. Each
variety should have a hyperlink (ideally a scroll-over box) to 
information about that particular variety. This can be bogus text
at this time, a student of Plant Sciences will write the actual text.

LSD_Calculator.fetch() is really three functions, one where sub-tables 
are generated, one where lsds for those sub-tables are calculated, and
another where everything is collated into an output table. The latter
step (collated into output table) for sure needs to be cut out into
a separate method, and all three are candidates for client-side 
processing.

Someone will need to implement "LSD(list[][], alpha):" in javascript.

The intent of this website is to replace the printed booklets that
the Plant Sciences dept currently prints and distributes. They already
have pdf versions of their booklets available on the website, and our
project would like to deliver in a form familiar to that. Modern
browsers support 
  <link media="print" rel="stylesheet">
* look at seeing seed sellers

* enter lsds for older data
* add a link to home/start over
* "back" button support? GET instead of POST?
* mult-year avg still culling, other wierd behavior
  * 56716, 50mi
* message if v-v union is empty, from "compare selected" button
* dropdown/add -> submit for v-v on main page
  * message if v-v union empty
* look at distance-sort instead of lexigraphical for location names
* "compare selected" should do nothing if 0 or 1 varieties are selected
  * message?
* add "All" button at top
 * only show n-yr avgs of each field
* cols not same sized on v-v view?

* 50 mi 58501, 2010, Kidder County has an index of -1, why?

Notes from Jan 5 meeting:
zipcode to means only, distance on h
 button to view source data
 note of # locations in each  result
reimagine in terms of smartphone app
 e.g smaller screens, more drill before view

Priority queue
	Input old data, repair old
	all-field view
	only show 1,2,3-yr avg, no longer ask for 50,100,etc. 

Why does Carrington 2011 bushels_acre return 25 up to 41?
Why does Kidder County 2011 bushels_acre show up twice with different values?

future:
	sort by proximity
	UI for entering data, confirmation/error pages
	Table showing noughts for each variety x location x year data has been entered for
		mouseover to see number

** REGRESSION ** in the compare varieities view, the data is sometimes not expunged...

Notes from 2012-Mar-20 Meeting
	*	H-bar gone in some browsers?
	* Remove empty locations (feature for Jochum) on extension version, keep on 134
	* Display (how?) the number of site-years in each avg calc
		* need to give the view the length of the 1,2,3-yr list
		* footnote?
	* Fix up the transition from variety-location views
		* send the string "variety" or "location"?
	* Don't mind as much about across site-years, we want big tables
		* maybe do calcs like as now, then collate them into one or more tables?
		* "inivisibly" drop locations to calculate 3,2-yr lsds
** REGRESSION ** 58103 200 mi.. Barnes?
** REGRESSION ** Barlow, Brennan, Faller, Glenn in variety show two tables...
